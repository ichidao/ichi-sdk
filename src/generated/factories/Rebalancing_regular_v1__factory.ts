/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  Rebalancing_regular_v1,
  Rebalancing_regular_v1Interface,
} from "../Rebalancing_regular_v1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gnosis",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseLoPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limitUpPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limitReservePct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pendingDepositsPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beginOverInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endOverInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endUnderInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beginUnderInvPct",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseLoPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limitUpPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limitReservePct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pendingDepositsPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beginOverInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOverInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endUnderInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beginUnderInvPct",
        type: "uint256",
      },
    ],
    name: "DeployRebalanceStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highGasStarted",
        type: "uint256",
      },
    ],
    name: "HighGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRebalanceManager.RebalanceActions",
        name: "action",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dtr",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pendingRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "missingData",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "enum VaultState",
        name: "lastState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum VaultState",
        name: "currentState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
    ],
    name: "RebalanceAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseLoPct",
        type: "uint256",
      },
    ],
    name: "SetBaseLoPct",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beginOverInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOverInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endUnderInvPct",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beginUnderInvPct",
        type: "uint256",
      },
    ],
    name: "SetDtrBoundaries",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gasOracle",
        type: "address",
      },
    ],
    name: "SetGasOracle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasTolerance",
        type: "uint256",
      },
    ],
    name: "SetGasTolerance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limitReservePct",
        type: "uint256",
      },
    ],
    name: "SetLimitReservePct",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limitUpPct",
        type: "uint256",
      },
    ],
    name: "SetLimitUpPct",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minTimeBetweenRebalances",
        type: "uint256",
      },
    ],
    name: "SetMinTimeBetweenRebalances",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pendingDepositsPct",
        type: "uint256",
      },
    ],
    name: "SetPendingDepositsPct",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceChange",
        type: "uint256",
      },
    ],
    name: "SetPriceChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "GAS_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IICHIVault",
        name: "_vault",
        type: "address",
      },
    ],
    name: "_currentPosition",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseLo",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "baseUp",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "limitLo",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "limitUp",
            type: "int24",
          },
        ],
        internalType: "struct LowHighPosition",
        name: "pos",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseLoPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beginOverInvPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beginUnderInvPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentVolatility",
    outputs: [
      {
        internalType: "uint256",
        name: "volatility",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositTokenRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "dtr",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dtrDelta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endOverInvPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endUnderInvPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executionDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extremeVolatility",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasTolerance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gnosis",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highGasStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highVolatility",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRebalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limitReservePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limitUpPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTimeBetweenRebalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingDepositsPct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingDepositsRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "currentPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "twapSlow_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "twapFast_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceInitiation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseLoPct",
        type: "uint256",
      },
    ],
    name: "setBaseLoPct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beginOverInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endOverInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endUnderInvPct",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beginUnderInvPct",
        type: "uint256",
      },
    ],
    name: "setDtrBoundaries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gasOracle",
        type: "address",
      },
    ],
    name: "setGasOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasTolerance",
        type: "uint256",
      },
    ],
    name: "setGasTolerance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limitReservePct",
        type: "uint256",
      },
    ],
    name: "setLimitReservePct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limitUpPct",
        type: "uint256",
      },
    ],
    name: "setLimitUpPct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTimeBetweenRebalances",
        type: "uint256",
      },
    ],
    name: "setMinTimeBetweenRebalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pendingDepositsPct",
        type: "uint256",
      },
    ],
    name: "setPendingDepositsPct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceChange",
        type: "uint256",
      },
    ],
    name: "setPriceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simulate",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "baseLo",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "baseUp",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "limitLo",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "limitUp",
            type: "int24",
          },
        ],
        internalType: "struct LowHighPosition",
        name: "newPos",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "someVolatility",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapFast",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapSlow",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IICHIVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "baseTotal_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scarceTotal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultSummary",
    outputs: [
      {
        internalType: "address",
        name: "vault_",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "scarceToken_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "inverted_",
        type: "bool",
      },
      {
        internalType: "int24",
        name: "tickSpacing_",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Rebalancing_regular_v1__factory {
  static readonly abi = _abi;
  static createInterface(): Rebalancing_regular_v1Interface {
    return new utils.Interface(_abi) as Rebalancing_regular_v1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Rebalancing_regular_v1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Rebalancing_regular_v1;
  }
}
